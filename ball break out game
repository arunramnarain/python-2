import turtle 
import time 


sc=turtle.Screen()
sc.setup(600,600)
sc.tracer(0)
sc.bgcolor("black")

#player
paddle=turtle.Turtle()
paddle.shape("square")
paddle.color("red")
paddle.up()
paddle.goto(0,-250)
paddle_width=20

#ball
ball=turtle.Turtle()
ball.shape("circle")
ball.color("white")
ball.up()
ball.speed(3)

ball.dx=2
ball.dy=-3#ball speed in y direction

#bricks
bricks=[]
colors=["purple","blue","sky blue","green"]
for row in range(1):
    for col in range(-250,250,80):#-250,250,80
        brick=turtle.Turtle()
        brick.shape("square")
        brick.color(colors[row])
        brick.up()
        brick.speed(10)
        brick.goto(col,150-(row*30))
        bricks.append(brick)

#score
score=0
score_display=turtle.Turtle()
score_display.color("yellow")
score_display.up()
score_display.hideturtle()
score_display.goto(0,260)
score_display.write("SCORE: {}".format(score),align="center",font=("Arial",30,"bold"))

final_score=turtle.Turtle()
final_score.color("red")
final_score.up()
final_score.hideturtle()
final_score.goto(0,0)

deaths=0

#player movement
def move_left():
    x=paddle.xcor()
    if x>-300:
        paddle.setx(x-40)#player speed

def move_right():
    x=paddle.xcor()
    if x<300:
        paddle.setx(x+40)#player speed

sc.listen()
sc.onkey(move_left,"a")
sc.onkey(move_right,"d")

game_started=False
def start_game(x,y):
    global game_started
    game_started=True
sc.onclick(start_game)

def start_screen():
    pass

timer = 0
backup_timer = 0
# game loop
while True:
    #stopwatch
    #timer+=1
    #time.sleep(1)
    #if timer>60:
    #    backup_timer += 1
    #    timer = 0


    sc.update()
    time.sleep(0.01)
    #start_time=time.time()
    if not game_started:
        continue

    #move the ball
    ball.setx(ball.xcor()+ball.dx)

    ball.sety(ball.ycor()+ball.dy)

    #ball collision with walls
    if (ball.xcor()>290) or (ball.xcor()<-290):
        ball.dx*=-1
    if ball.ycor()>290:
        ball.dy*=-1
    if ball.ycor()<-290:
        ball.goto(0,0)
        ball.dy*=-1
        game_started=False#game started is a variable
        score=0
        score_display.clear()
        score_display.write("SCORE: {}".format(score),align="center",font=("Arial",30,"bold"))
    deaths+=1

    #ball collision with paddle 
    if (ball.ycor()>-250 and ball.ycor()<-180) and (paddle.xcor()-paddle_width//2<ball.xcor()<paddle.xcor()+paddle_width//2):
        ball.dy*=-1

    #ball collision with bricks
    for brick in bricks:
        if abs(ball.xcor()-brick.xcor())<40 and abs(ball.ycor()-brick.ycor())<15:
        
            ball.dy *= -1
            brick.hideturtle()
            bricks.remove(brick)
            score+=100
            score_display.clear()
            score_display.write("SCORE: {}".format(score),align="center",font=("Arial",30,"bold"))

    #check for game over
    if not bricks:
        sc.clear()
        sc.bgcolor("black")
        end_time=time.time()
        #game_time=end_time-start_time%.2
        final_score.write("        ---GAME OVER!--- \nfinal score: {}\ndeaths: {} \ntime played: m s".format(score,deaths,),align="center",font=("Arial",30,"bold"))
        time.sleep(5)
        sc.clear()
        #game_start()
