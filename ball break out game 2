import turtle 
import time 

sc=turtle.Screen()
sc.setup(600,600)
sc.tracer(0)
sc.bgcolor("black")

#player
paddle=turtle.Turtle()
paddle.shape("square")
paddle.color("red")
paddle.up()
paddle.goto(0,-250)
paddle.width=50

#ball
ball=turtle.Turtle()
ball.shape("circle")
ball.color("white")
ball.speed(3)

ball.dx=2
ball.dy=-2

#bricks
bricks=[]
colors=["purple","blue","sky blue","green"]
for row in range(4):
    for col in range(-250,250,80):
        brick=turtle.Turtle()
        brick.shape("square")
        brick.color(colors[row])
        brick.up()
        brick.speed(10)
        brick.goto(col,150-(row*30))
        bricks.append(brick)

#score
score=0
score_display=turtle.Turtle()
score_display("yellow")
score_display.hideturtle()
score_display.up()
score_display.goto(260,260)
score_display.write("SCORE: {score}",align="centre",font=("Ariel",30,"bold"))

#player movement
def move_left():
    x=paddle.xcor()
    if x>-300:
        paddle.setx(x-25)

def move_right():
    x=paddle.xcor()
    if x<300:
        paddle.setx(x+20)

sc.listen()
sc.onkey(move_left,"a")
sc.onkey(move_right,"d")

game_started=False
def start_game(x,y):
    global game_started
    game_started=True
sc.onkey(start_game)

# game loop
while True:
    sc.update()
    time.sleep(0.01)
    if not game_started:
        continue

    #move the ball
    ball.setx(ball.xcor()+ball.dx)

    ball.sety(ball.ycor()+ball.dy)

    #ball collision with walls
    if (ball.xcor()>290) or (ball.xcor<()-290):
        ball.dx*=-1
    if ball.ycor()>290:
        ball.dy*=-1
    if ball.ycor()<-290:
        ball.goto(0,0)
        ball.dy*=-1
        start_game=False
        score=0
        score_display.clear()
        score_display.write("SCORE: {score}",align="centre",font=("Ariel",30,"bold"))

    #ball collision with paddle 
    if (ball.ycor()>-250 and ball.ycor()<-180) and (paddle.xcor()-paddle_width//2<ball.xcor()<paddle.xcor()+paddle_width//2):
        ball.dy*=-1

    #ball collision with bricks
    for brick in bricks:
        if abs(ball.xcor()-brick.xcor())<40 and abs(ball.ycor()-brick.ycor())<15:
        
            ball.ycor*=-1
            brick.hideturtle()
            bricks.remove(brick)
            score+=10
            score_display.clear()
            score_display.write("SCORE: {score}",align="centre",font=("Ariel",30,"bold"))

    #check for game over
    if not bricks:
        print("you win")
        break
